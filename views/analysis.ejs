<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Home Dashboard</title>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200" />
<link href='https://fonts.googleapis.com/css?family=Poppins' rel='stylesheet'>
    
<style>
    
    * {
        font-family: "poppins";
        margin: 0;
        padding: 0;
        font-weight: 500;
    }
    
    body {
        margin: 0;
        height: 95.4vh;
        overflow-y: auto;
        font-family: Arial, sans-serif;
    }
    
    .material-symbols-outlined {
        color: #7ae4a5;
        font-variation-settings:
        'FILL' 0,
        'wght' 400,
        'GRAD' 0,
        'opsz' 24
      }


    .event {
        background-color: rgb(255, 255, 255);
        padding: 2rem;
        margin: 1rem;
        font-size: 20px;
        border: 1dp solid grey;
        border-radius: 5px;
    }
    
    #sidebar {
        margin-top: 3rem;
        height: 100vh;
        width: 200px;
        padding-top: 3rem;
        padding-left: 2rem;
        background-color: #ffffff;
        color: #000000;
        position: fixed;
        left: 0;
        top: 0;
        transition: all 0.3s ease;
        overflow-y: auto;
    }
    
    #sidebar.collapsed {
        display: none;
        width: 60px;
    }
    
    #content {
        display: grid;
        height: 95.4vh;
        overflow-y: auto;
        background-color: #bce3cc;
        margin-left: 250px;
        padding: 20px;
        transition: margin-left 0.3s ease;
    }
    
    #content.collapsed {
        margin-left: 60px;
        transition: margin-left 0.3s ease;
    }

    input {
        font-size: 25px;
        padding: 5px 20px;
    }
    
    #header {
        display: flex;
        align-items: center;
        background-color: #ffffff;
        color: #000000;
        padding: 24px;
        width: 100%;
        justify-content: space-between;
        position: fixed;
        padding-right: 300px;
        top: 0;
        z-index: 1000;
    }

    button{ 
        color: #ffffff;
        border: none;
        background-color: none;
        padding: 5px;
        left: 10px;
        top: 50%;
    }
    
    #toggle-sidebar {
        color: #fff;
        border: none;
        padding: 5px;
        left: 10px;
        top: 50%;
    }
    .blank {
        height: 13vh;
    }

    .budget {
        span {
            margin-left: 10px;
        }
        input{
            width: 5rem;
        }
        .material-symbols-outlined {
          color: #ffffff;
          margin: 0;
          font-variation-settings:
          'FILL' 0,
          'wght' 400,
          'GRAD' 0,
          'opsz' 24
        }
        display: flex;
        margin-left: 80px;
        align-items: center;
        justify-content: center;
    }
    
    #toggle-sidebar:focus {
        outline: none;
    }

    .btnNo{
        background: none;
        background-color: none;
        height: min-content;
        width: min-content;
    }

    .content {
        width: 99%;
        display: grid;
        gap: 1rem;
        justify-items: center;
    }

    .btnSave {
        margin-left: 10px;
        padding-top: 1dvh;
        padding-left: 10px;
        padding-right: 10px;
        background-color: #56a676;
        justify-content: center;
        align-items: center;
        border-radius: 5px;
    }
    ul{
        margin: 20px 0;
        list-style: none;
        font-size: 18px;

        .material-symbols-outlined {
            color: #000000;
            margin: 0px 10px;
            font-variation-settings:
            'FILL' 0,
            'wght' 400,
            'GRAD' 0,
            'opsz' 24
          }

        li{
            justify-items: center;
            align-content: center;
            display: flex;
            padding: 2px 0;
            color: #000000;
        }
        li.selected {
            color: #00983d;
            .material-symbols-outlined {
                color: #00983d;
                font-variation-settings:
                'FILL' 0,
                'wght' 400,
                'GRAD' 0,
                'opsz' 24
              }
        }
    }
    hr {
        margin-top: 10px;
        opacity: 30%;
    }

    /* The modal (background) */
        .modal {
            display: none; /* Hidden by default */
            position: fixed; /* Stay in place */
            z-index: 1; /* Sit on top */
            left: 0;
            top: 0;
            width: 100%; /* Full width */
            height: 100%; /* Full height */
            overflow: auto; /* Enable scroll if needed */
            background-color: rgba(0, 0, 0, 0.5); /* Black w/ opacity */
        }
  
        /* modal Content/Box */
        .modal-content {
            border-radius: 5px;
            background-color: #fefefe;
            margin: 15% auto; /* 15% from the top and centered */
            padding: 20px;
            font-size: 20px;
            border: 1px solid #888;
            width: 20%; /* Could be more or less, depending on screen size */
            input{
                width: 90%;
                margin: 5px 0px;
                padding-left: 5px;
                font-size: 20px;
            }
        }
        .close {
            color: #aaa;
            float: right;
            font-size: 28px;
            font-weight: bold;
        }
        
        .close:hover,
        .close:focus {
            color: black;
            text-decoration: none;
            cursor: pointer;
        }
        
        /* Button inside the modal */
        #modalSubmitBtn {
            display: block;
            margin-top: 10px;
            width: 100%;
            padding: 10px 20px;
            background-color: #56a676;
            color: white;
            border-radius: 3px;
            cursor: pointer;
        }
        
        #modalSubmitBtn:hover {
            background-color: #478660;
        }

        .addEventBtn {
            padding-top: 1dvh;
            padding-left: 10px;
            font-size: 20px;
            padding-right: 10px;
            color: #ffffff;
            background-color: #56a676;
            border-radius: 5px;
        }
        .addEventBtn:hover {
            background-color: #00983d;
        }
        .add {
            display: flex;
            padding: 0 1.5rem;
            color: #225436;
            justify-content: space-between;
        }
        .myBudget {
            margin: 0px 15px;
            color: #3eab6a;
        }
        a {
            text-decoration: none;
        }
                /* The snackbar - position it at the bottom and in the middle of the screen */
  #snackbar {
    visibility: hidden; /* Hidden by default. Visible on click */
    min-width: 250px; /* Set a default minimum width */
    margin-left: -125px; /* Divide value of min-width by 2 */
    background-color: #56a676; /* Black background color */
    color: #fff; /* White text color */
    text-align: center; /* Centered text */
    border-radius: 2px; /* Rounded borders */
    padding: 16px; /* Padding */
    position: fixed; /* Sit on top of the screen */
    z-index: 1; /* Add a z-index if needed */
    left: 50%; /* Center the snackbar */
    bottom: 30px; /* 30px from the bottom */
  }
  
  /* Show the snackbar when clicking on a button (class added with JavaScript) */
  #snackbar.show {
    visibility: visible; /* Show the snackbar */
    /* Add animation: Take 0.5 seconds to fade in and out the snackbar.
    However, delay the fade out process for 2.5 seconds */
    -webkit-animation: fadein 0.5s, fadeout 0.5s 2.5s;
    animation: fadein 0.5s, fadeout 0.5s 2.5s;
  }
  
  /* Animations to fade the snackbar in and out */
  @-webkit-keyframes fadein {
    from {bottom: 0; opacity: 0;}
    to {bottom: 30px; opacity: 1;}
  }
  
  @keyframes fadein {
    from {bottom: 0; opacity: 0;}
    to {bottom: 30px; opacity: 1;}
  }
  
  @-webkit-keyframes fadeout {
    from {bottom: 30px; opacity: 1;}
    to {bottom: 0; opacity: 0;}
  }
  
  @keyframes fadeout {
    from {bottom: 30px; opacity: 1;}
    to {bottom: 0; opacity: 0;}
  }
  .content-wrap {
    display: flex;
    padding: 2rem 13rem;
    background-color: rgb(239, 235, 235);
  }

</style>
</head>
<body onload="snackbar()">
    <div id="snackbar"></div>
    <div id="sidebar">
        <h2><%= user.name%></h1>
            <hr>
            <ul>
                <li>
                    <span class="material-symbols-outlined">home
                    </span>
                    <a href="/home?id=<%= user._id%>">Home</a></li>
                <li class="selected">
                    <span class="material-symbols-outlined">monitoring
                    </span>
                    <a>Analysis</a></li>
            </ul>
    </div>
    <div id="content">
        <div class="content">
            <div class="blank">
            </div>
            
            <h2>Event Chart</h2>
            
            <div id="chart_div" style="width: 80%; height: 500px;"></div>
            <h2>SE Chart</h2>
                    <main class="content-wrap">
			<canvas id="myChart" width="400" height="400"></canvas>

			<script>
			const events =<%- JSON.stringify(eventArray) %>;
			console.log(events)

			
			
	
				// Calculate savings or exceed amount for each event
				const data = events.map(event => {
					const savings = event.expectedRate - event.actualRate;
					return {
						eventName: event.eventName,
						savings: savings > 0 ? savings : 0,
						exceed: savings < 0 ? Math.abs(savings) : 0
					};
				});
		
				// Chart data
				const labels = data.map(event => event.eventName);
				const savingsData = data.map(event => event.savings);
				const exceedData = data.map(event => event.exceed);
		
				// Chart configuration
				const config = {
					type: 'bar',
					data: {
						labels: labels,
						datasets: [{
								label: 'Savings',
								data: savingsData,
								backgroundColor: 'rgba(75, 192, 192, 0.2)',
								borderColor: 'rgba(75, 192, 192, 1)',
								borderWidth: 1
							},
							{
								label: 'Exceed',
								data: exceedData,
								backgroundColor: 'rgba(255, 99, 132, 0.2)',
								borderColor: 'rgba(255, 99, 132, 1)',
								borderWidth: 1
							}
						]
					},
					options: {
						scales: {
							yAxes: [{
								ticks: {
									beginAtZero: true
								}
							}]
						}
					}
				};
		
				// Render chart
				const ctx = document.getElementById('myChart').getContext('2d');
				new Chart(ctx, config);
			</script>
        </main>

            
            
        </div>
    </div>
    <div id="header">
        <div style="display: flex;">
            <button class="btnNo" id="toggle-sidebar">
                <span class="material-symbols-outlined">menu</span>
            </button>
            <img style="height: 2rem"; src="spendyLogo.png">
            <div class="budget">
                <h3>Budget</h3>
                <h3 class="myBudget"><%= user.budget %>/-</h3>
                <button id="saveBtn" class="btnSave">
                    <span class="material-symbols-outlined">
                        edit
                    </span>
                </button>

                <div id="mymodal" class="modal">
                    <form action="/budget" method="post">
                    <div class="modal-content">
                        <span class="close">&times;</span>
                        <h2>My Budget</h2>
                        
                        <hr style="margin-bottom: 10px;">
                        <p>Increase budget:</p>
                        <input type="hidden" name="userId" value="<%=user._id%>"> 
                        <input name="increaseAmount" type="text" id="input1" placeholder="Amount">
                        <p>Decrease budget:</p>
                        <input name="decreaseAmount" type="text" id="input1" placeholder="Amount">
                        <button type="submit" id="modalSubmitBtn">Submit</button>
                    </div>
                </form>
                    </div>

            </div>
        </div>
        <button class="btnNo"  style="margin-right: 40px;">
            <span class="material-symbols-outlined">power_settings_new</span></button>
    </div>

    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>


    <script>
        document.getElementById('toggle-sidebar').addEventListener('click', function() {
            document.getElementById('sidebar').classList.toggle('collapsed');
            document.getElementById('content').classList.toggle('collapsed');
        });
        
        var modal = document.getElementById("mymodal");
        var btn = document.getElementById("saveBtn");
        var span = document.getElementsByClassName("close")[0];

        btn.onclick = function() {
        modal.style.display = "block";
        }

        span.onclick = function() {
        modal.style.display = "none";
        }

        window.onclick = function(event) {
            if (event.target == modal) {
                modal.style.display = "none";
            }
        }

      google.charts.load('current', {'packages':['corechart']});
      google.charts.setOnLoadCallback(drawChart);

      function drawChart() {
        var data = google.visualization.arrayToDataTable(<%- JSON.stringify(arrayOfArrays) %>);

        var options = {
          title: 'Event Based Chart',
          hAxis: {title: 'Year',  titleTextStyle: {color: '#333'}},
          vAxis: {minValue: 0}
        };

        var chart = new google.visualization.AreaChart(document.getElementById('chart_div'));
        chart.draw(data, options);

        var chart2 = new google.visualization.AreaChart(document.getElementById('chart_div2'));
        chart2.draw(data, options);

        var chart3 = new google.visualization.AreaChart(document.getElementById('chart_div3'));
        chart3.draw(data, options);
      }

    function snackbar() {
        var x = document.getElementById("snackbar");
        if(x.innerHTML!="") {
            x.className = "show";
            setTimeout(function(){ x.className = x.className.replace("show", ""); }, 3000);
        }
    }

    </script>
</body>
</html>